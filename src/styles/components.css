/* ============================
   THE GREY — components.css
   (MTG dimensions + clean edge/shadow + iOS seam fixes)
   ============================ */

/* ---------- Theme tokens ---------- */
:root{
  --bg:#F3EEE5;
  --panel:#FFF;
  --panel-soft:#F9F6F0;
  --ink:#2a2a2a;
  --muted:#777;
  --chip:#f2e7d0;
  --chip-ink:#945c00;

  /* MTG ratio ≈ 3.5 / 2.5 = 1.4 */
  --card-ratio: 1.4;
  /* Base desktop width (mobile scaling below) */
  --card-w: 220px;
  --card-h: calc(var(--card-w) * var(--card-ratio));

  --radius: 16px;
  --shadow: 0 6px 20px rgba(0,0,0,.08);
}

*{ box-sizing:border-box; }

body{
  margin:0; background:var(--bg); color:var(--ink);
  font:16px/1.4 system-ui,-apple-system,"Segoe UI",Roboto,Inter,Arial,sans-serif;
}

/* ---------- Shell panels ---------- */
.wrap{ max-width:1200px; margin:24px auto 160px; padding:0 16px; }
.zone{
  background:var(--panel); border-radius:14px; box-shadow:var(--shadow);
  padding:18px; margin:12px 0;
}
.zone .title{ font-weight:600; color:#594f43; margin:0 0 8px; }

/* ---------- Aetherflow chips ---------- */
.costCell{ display:flex; justify-content:center; }
.costChip{
  display:inline-flex; align-items:center; justify-content:center;
  width:28px; height:28px; border-radius:999px;
  background:var(--chip); color:var(--chip-ink); font-weight:600;
  box-shadow: inset 0 1px 0 #fff8, 0 1px 2px rgba(0,0,0,.06);
}

/* ============================
   CARD + MTG STYLE
   ============================ */

/* Apply MTG size globally (cards and slots) */
.card{ width: var(--card-w) !important; height: var(--card-h) !important; }
.slotCell{ width: var(--card-w) !important; height: var(--card-h) !important; }

/* Base card: parchment face, clean rounded edge, subtle edge line */
.card{
  position: relative;
  border-radius:18px;
  background: linear-gradient(#fff, #faf8f4);
  background-clip: padding-box;
  box-shadow: var(--shadow);
  transition: transform .18s ease, box-shadow .18s ease, filter .18s ease;
  filter: none;
}

/* Inner printed edge line (MTG feel) */
.card::before{
  content:"";
  position:absolute; inset:0;
  border-radius:inherit;
  box-shadow: inset 0 0 0 1px #e9e2d7;
  pointer-events:none;
}

/* Remove any experimental vignette layer */
.card::after{ content:none !important; }

/* Hover lift (no filter: drop-shadow to keep corners crisp) */
.card:hover:not(.is-dragging){
  transform: translateY(-14px) scale(1.02);
  box-shadow: 0 10px 26px rgba(0,0,0,.12);
  filter: none !important;
}

/* Content blocks inside a card */
.card .cHead{ margin-bottom:8px; }
.card .cName{ font-weight:700; letter-spacing:.2px; }
.card .cType{ font-size:12px; color:var(--muted); }
.card .cBody{ flex:1 1 auto; color:#3a3a3a; }
.card .cStats{ display:flex; gap:8px; }
.card .cStats .stat{
  font-size:12px; background:#fff6e6; color:#b35a00;
  border-radius:12px; padding:3px 8px; border:1px solid #f3dfbf;
}

/* Ribbon hand: cards peek and rise on hover/drag */
.ribbon .card{
  pointer-events:auto;
  position:relative;
  transform: translateY(10px);
  transition: transform 120ms ease, filter 120ms ease;
  will-change: transform;
  margin-left: -64px;            /* overlap to fan */
}
.ribbon .card:hover,
.ribbon .card.is-dragging{
  transform: translateY(-14px) scale(1.02);
}

/* Press pose equals hover (so holding doesn’t “drop” the card) */
.ribbon .card.is-pressing{
  transform: translateY(-14px) scale(1.02) !important;
  transition: none !important;
}

/* Disable transition while actually dragging */
.card.is-dragging{ transition: none !important; }

/* ============================
   SLOTS
   ============================ */
.slotCell{
  border-radius:18px; background:var(--panel-soft);
  outline:1px dashed #e6dfd4; outline-offset:-6px;
  display:flex; align-items:center; justify-content:center;
}
.slotCell.glyph{ border-style:solid; background:#f8f7f4; }
.slotCell.drop-ok    { outline:2px solid #4caf50; }
.slotCell.drop-no    { outline:2px solid #e57373; opacity:.6; }
.slotCell.drop-hover { box-shadow:0 0 0 4px #4caf5033 inset; }

/* ============================
   HUD / Controls
   ============================ */
.hudRow{ display:flex; align-items:center; justify-content:space-between;
  gap:12px; padding:10px 16px; }
.pill{ display:flex; gap:10px; align-items:center; padding:8px 12px;
  background:var(--panel); border-radius:999px; box-shadow:var(--shadow); }
.seg{ display:flex; align-items:center; gap:6px; font-weight:600; }
.seg svg{ width:16px; height:16px; stroke:#222; fill:none; stroke-width:1.8px; }
.sep{ width:1px; height:18px; background:#e5dfd5; }

/* Aether gem */
.aeGem{
  position:fixed; right:18px; bottom:86px; z-index:40;
  width:54px; height:54px; border-radius:14px;
  background:radial-gradient(ellipse at 30% 25%,#ffd67a,#f6b441 60%,#d38d1f 100%);
  box-shadow:0 10px 26px rgba(0,0,0,.18), inset 0 2px 6px #fff8;
  display:flex; align-items:center; justify-content:center; font-weight:800;
}

/* Top-right controls (Draw / End / Reset) */
.fabDial{ position:fixed; right:18px; top:18px; z-index:50; display:flex; flex-direction:column; gap:12px; }
.fab{ width:40px; height:40px; border-radius:999px; border:0; background:#fff;
     box-shadow:var(--shadow); cursor:pointer; font-weight:700; }

/* Helpers */
.emptyCell{ color:#bcb4a7; font-weight:600; }

/* ============================
   PREVIEW (if/when used)
   ============================ */
.preview-overlay{
  position: fixed; inset: 0;
  background: rgba(10,10,8,.55);
  backdrop-filter: blur(2px);
  display: grid; place-items: center;
  z-index: 100;
}
.preview-card{
  transform: translateY(-8px) scale(1.25);
  transform-origin: center;
  transition: transform 150ms ease;
  max-width: min(96vw, 800px);
}
.preview-card .card{ box-shadow: 0 12px 34px rgba(0,0,0,.28); }

/* Instant pulse halo that doesn’t kill base shadow */
@keyframes goldPulse {
  0%   { box-shadow: 0 0 0 0 rgba(255,210,90,.45); opacity: 1; }
  70%  { box-shadow: 0 0 24px 10px rgba(255,210,90,.18); opacity: .85; }
  100% { box-shadow: 0 0 0 0 rgba(255,210,90,0); opacity: 0; }
}
.card.is-instant.pulsing::after{
  content:"";
  position:absolute; inset:-2px;
  border-radius:inherit; pointer-events:none;
  animation: goldPulse 1.4s ease-out infinite;
}

/* ============================
   DRAG HOST / STATES
   ============================ */
.drag-layer{
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 999;
}

/* Prevent native ghost image on ribbon cards */
.ribbon .card, .ribbon .card *{
  -webkit-user-drag: none;
  user-select: none;
  touch-action: none;
}

/* Real card while dragging (MTG edge + deeper shadow) */
.card.is-dragging{
  position: fixed; left: 0; top: 0;
  width: var(--card-w) !important; height: var(--card-h) !important;
  transform: translate3d(var(--drag-x, 0px), var(--drag-y, 0px), 0) scale(1.02);
  border-radius:18px;
  background: linear-gradient(#fff,#faf8f4);
  background-clip: padding-box;
  box-shadow: 0 18px 40px rgba(0,0,0,.28);
  filter: none !important;
  cursor: grabbing;
  will-change: transform, box-shadow;
}
.card:hover.is-dragging{
  transform: translate3d(var(--drag-x, 0px), var(--drag-y, 0px), 0) scale(1.02) !important;
  box-shadow: 0 18px 40px rgba(0,0,0,.28) !important;
}

/* ============================
   iOS / Safari seam fixes
   ============================ */
.card::after,
.wrap::before, .wrap::after,
.zone::before, .zone::after { content:none !important; }

.card, .card:hover, .card.is-dragging{ filter:none !important; }

html, body, .wrap{
  background: var(--bg) !important;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transform: translateZ(0);
}

/* ============================
   Mobile scaling (keep ratio)
   ============================ */
@media (max-width: 480px){
  :root{
    --card-w: min(38vw, 220px);
    --card-h: calc(var(--card-w) * var(--card-ratio));
  }
}

/* ===== Hand ribbon (fixed bottom, proper z-index) ===== */

/* The fixed tray that the hand sits in */
.ribbon-wrap{
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 60;                     /* above boards, below FABs/HUD */
  height: calc(var(--card-h) + 20px);
  pointer-events: none;            /* pass through unless on .ribbon */
  /* subtle tray look (optional) */
  background: linear-gradient(to top, rgba(0,0,0,.06), transparent 26%);
}

/* The actual hand row (h-scroller) */
.ribbon{
  height: 100%;
  display: flex;
  align-items: flex-end;
  gap: 0;                          /* cards overlap via negative margin */
  padding: 0 20px 12px;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-snap-type: x proximity;
  -webkit-overflow-scrolling: touch;
  pointer-events: auto;            /* re-enable inside tray */
}

/* Cards in the ribbon peek slightly by default, lift on hover/drag */
.ribbon .card{
  position: relative;
  transform: translateY(10px);
  transition: transform 120ms ease, filter 120ms ease;
  will-change: transform;
  margin-left: -64px;              /* overlap to create fan */
  scroll-snap-align: start;
}

/* Make sure page content leaves space for the tray */
.wrap{
  /* if your bottom margin was removed in other edits, restore it: */
  margin: 24px auto 160px !important;
}

/* Keep the hand above the tray background during drag/hover */
.ribbon .card:hover,
.ribbon .card.is-dragging{
  transform: translateY(-14px) scale(1.02);
}


/* --- FIX: do NOT transform html/body/.wrap (breaks position:fixed on iOS) --- */
html, body, .wrap{
  transform: none !important;
  -webkit-transform: none !important;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

/* Safe per-element GPU nudge to avoid the 1px seam without breaking fixed */
.card, .zone{
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
}

/* Keep the hand ribbon fixed to the bottom */
.ribbon-wrap{
  position: fixed !important;
  left: 0; right: 0; bottom: 0;
  z-index: 60;
  height: calc(var(--card-h) + 20px);
  pointer-events: none;
  background: linear-gradient(to top, rgba(0,0,0,.06), transparent 26%);
}
.ribbon{
  height: 100%;
  display: flex; align-items: flex-end;
  gap: 0; padding: 0 20px 12px;
  overflow-x: auto; overflow-y: hidden;
  -webkit-overflow-scrolling: touch;
  pointer-events: auto;
}

/* --- Hand tray: prevent clipping when cards lift --- */

/* Give the tray extra headroom and respect iOS bottom safe area */
.ribbon-wrap{
  height: calc(var(--card-h) + 36px) !important;          /* + room for lift */
  padding-bottom: max(12px, env(safe-area-inset-bottom)); /* iOS home bar */
  overflow: visible !important;                            /* don't clip */
}

/* Allow cards to rise above the scroller’s top edge */
.ribbon{
  overflow-x: auto !important;
  overflow-y: visible !important;   /* was hidden -> caused the cropping */
  -webkit-overflow-scrolling: touch;
  align-items: flex-end;            /* keep bases aligned to tray bottom */
}

/* Keep lifted/dragging cards above the tray background */
.ribbon .card{ z-index: 1; position: relative; }
.ribbon .card:hover,
.ribbon .card.is-dragging{ z-index: 2; }

/* Optional: soften the tray gradient so it doesn't “mask” edges */
.ribbon-wrap{
  background: linear-gradient(to top, rgba(0,0,0,.05), transparent 28%) !/* ===== Hand tray anti-crop override (paste at end) ===== */

/* Never transform the root container — keeps fixed elements truly fixed */
html, body, .wrap{
  transform: none !important;
  -webkit-transform: none !important;
}

/* Hand tray pinned to the bottom with safe-area and no masking */
.ribbon-wrap{
  position: fixed !important;
  left: 0; right: 0;
  /* sit exactly on top of the safe area (works on iOS Chrome/Safari) */
  bottom: env(safe-area-inset-bottom, 0) !important;

  /* extra headroom so lifted cards aren't clipped */
  height: calc(var(--card-h) + 44px) !important;

  /* no gradient/fade that could visually “cut” cards */
  background: transparent !important;

  /* make sure nothing in here is clipped */
  overflow: visible !important;

  /* pass pointer only to the inner ribbon */
  pointer-events: none;

  /* sit above boards/HUD */
  z-index: 2147483646;
}

/* The scrollable hand row */
.ribbon{
  position: relative;
  height: 100%;
  display: flex;
  align-items: flex-end;
  gap: 0;
  padding: 0 16px 0;                 /* bottom padding not needed; wrap has height */

  overflow-x: auto !important;
  overflow-y: visible !important;     /* <- key to avoid cropping */
  -webkit-overflow-scrolling: touch;

  pointer-events: auto;               /* re-enable interactions */
  z-index: 2147483647;                /* above tray bg */
}

/* Cards in hand: overlap fan and lift without being cropped */
.ribbon .card{
  position: relative;
  transform: translateY(8px);
  transition: transform 120ms ease;
  margin-left: -64px;                 /* fan effect */
  z-index: 1;
}
.ribbon .card:hover,
.ribbon .card.is-dragging{
  transform: translateY(-14px) scale(1.02);
  z-index: 2;                         /* above neighbors & tray */
}

/* Keep slots from adding any unexpected clipping */
#playerSlots, #aiSlots{
  overflow: visible !important;
}


/* ===== Hand tray: bulletproof anti-crop + topmost layer ===== */

/* Root must NOT be transformed or fixed elements lose their anchor on iOS */
html, body, .wrap{
  transform: none !important;
  -webkit-transform: none !important;
  overflow-x: visible !important;
  overflow-y: visible !important;
}

/* The fixed tray pinned to the bottom, above everything */
.ribbon-wrap{
  position: fixed !important;
  left: 0; right: 0;
  bottom: env(safe-area-inset-bottom, 0) !important;

  /* more headroom so lifted cards never hit the tray edge */
  height: calc(var(--card-h) + 56px) !important;

  /* absolutely no masking */
  background: transparent !important;
  overflow: visible !important;

  /* ignore pointer to allow inner .ribbon to receive it */
  pointer-events: none;

  /* topmost layer */
  z-index: 2147483646 !important;

  /* create a fresh stacking context that nothing outside can clip */
  isolation: isolate;
  contain: layout style paint;
}

/* The scrollable hand row inside the tray */
.ribbon{
  position: relative;
  height: 100%;
  display: flex;
  align-items: flex-end;
  gap: 0;
  padding: 0 16px 0;

  /* never crop upward lift */
  overflow-x: auto !important;
  overflow-y: visible !important;
  -webkit-overflow-scrolling: touch;

  pointer-events: auto;
  z-index: 2 !important;
}

/* Cards in the ribbon: may rise above their container */
.ribbon .card{
  position: relative;
  transform: translateY(8px);
  transition: transform 120ms ease;
  margin-left: -64px;          /* fan */
  z-index: 1;
}
.ribbon .card:hover,
.ribbon .card.is-dragging{
  transform: translateY(-14px) scale(1.02);
  z-index: 3;                  /* above neighbors & any tray visuals */
}

/* Absolutely forbid any “mask”/gradient siblings over the tray */
.ribbon-wrap::before,
.ribbon-wrap::after { content: none !important; }

/* Make sure common siblings can’t cover the tray */
.wrap, .zone, #topLog, .hudRow, .fabDial, .leftDock, .aetherGem {
  z-index: 100 !important;     /* far below the tray */
  position: relative;
  overflow: visible;
}

/* Slots never clip their content either */
#playerSlots, #aiSlots, .slots, .zone { overflow: visible !important; }
