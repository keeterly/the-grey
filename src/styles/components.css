/* ===================================================================
   THE GREY — Components (cards, slots, ribbon, chips)
   - Restores the "beautiful" card look & interactions
   - MTG-ish proportions (63×88 ratio)
   - Works with classes emitted by the current UI:
     .card, .handCard, .marketCard, .slotCard
     .slotCell, .slotCell.glyph, .flowGrid .marketCard[data-flow]
     .ribbon, .ribbon .handCard
     .cHead, .cName, .cType, .cBody, .cStats
   =================================================================== */

/* ---------- Vars (fallbacks if theme.css misses them) ---------- */
:root{
  --paper: #f7f3ed;
  --paper-top: #fbf8f4;
  --paper-bottom: #efe8dd;
  --ink: #2a2a2a;
  --ink-soft:#5b5b5b;
  --line: rgba(0,0,0,.08);
  --shadow: 0 10px 18px rgba(0,0,0,.12), 0 2px 6px rgba(0,0,0,.08);
  --shadow-soft: 0 6px 12px rgba(0,0,0,.10), 0 1px 4px rgba(0,0,0,.06);
  --ring: 0 0 0 2px rgba(0,0,0,.08), 0 0 0 6px rgba(0,0,0,.04);
  --accent: #d87b28;  /* aether amber */
  --accent-soft: rgba(216,123,40,.15);
  --slot-bg: #faf7f1;
  --slot-bg-ai: #f1f3f7;
}

/* ---------- MTG-ish card proportions & base look ---------- */
/* The math: aspect-ratio 63/88 ≈ 0.715. Height auto inside
   contexts; typical widths are set by parent (grid/ribbon). */
.card{
  --rad: 14px;
  --pad: 12px;
  width: 100%;
  aspect-ratio: 63 / 88;
  background: linear-gradient(180deg,var(--paper-top),var(--paper-bottom));
  border-radius: var(--rad);
  box-shadow: var(--shadow);
  border: 1px solid var(--line);
  color: var(--ink);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  transform: translateZ(0);
  transition: transform .24s ease, box-shadow .24s ease, filter .24s ease;
}

/* soft inner parchment “vignette” */
.card::before{
  content:"";
  position:absolute; inset:0;
  background: radial-gradient(120% 90% at 50% -10%, rgba(255,255,255,.65) 0%, rgba(255,255,255,0) 48%),
              radial-gradient(130% 80% at 50% 120%, rgba(0,0,0,.06) 0%, rgba(0,0,0,0) 55%);
  pointer-events:none;
}

/* hover/drag feedback (hand/market) */
.handCard:hover,
.marketCard:hover{
  transform: translateY(-4px) rotate(-.2deg);
  box-shadow: 0 16px 28px rgba(0,0,0,.16), 0 4px 10px rgba(0,0,0,.10);
}

/* smaller shadow in slots */
.slotCard{
  box-shadow: var(--shadow-soft);
}

/* ---------- Card sections ---------- */
.cHead{
  padding: var(--pad) var(--pad) 8px;
  border-bottom: 1px solid var(--line);
  line-height: 1.15;
}
.cName{
  font-weight: 700;
  font-size: clamp(13px, 1.5vw, 16px);
  letter-spacing: .2px;
}
.cType{
  margin-top: 2px;
  font-size: 12px;
  color: var(--ink-soft);
  text-transform: none;
}

.cBody{
  flex: 1;
  padding: 10px var(--pad) 8px;
  font-size: 13px;
  color: var(--ink);
  display: flex;
  align-items: flex-start;
}

.cStats{
  padding: 8px var(--pad) 10px;
  display: flex;
  gap: 10px;
  font-size: 12px;
  color: var(--ink-soft);
}
.cStats .stat{
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 2px 6px;
  border-radius: 999px;
  background: rgba(0,0,0,.04);
}
.cStats .v{
  background: var(--accent-soft);
  color: #7a3e00;
}

/* ---------- Ribbon (hand) ---------- */
.ribbon{
  position: relative;
  display: flex;
  gap: 14px;
  padding: 18px 18px 22px;
  align-items: flex-end;
  pointer-events: auto;
}
.ribbon .handCard{
  width: clamp(130px, 12vw, 180px);
  transform-origin: 50% 95%;
  will-change: transform;
  cursor: grab;
}

/* ---------- Flow grid (market) ---------- */
.flowWrap{
  padding: 8px 12px 16px;
}
.flowGrid{
  display: grid;
  grid-template-columns: repeat(5, minmax(160px,1fr));
  gap: 18px;
  align-items: start;
}
.costCell{
  position: relative;
  height: 0; /* let cards define height via aspect-ratio */
}
.costChip{
  position: absolute;
  top: -14px; left: 50%;
  transform: translateX(-50%);
  background: #fff8ec;
  border: 1px solid rgba(0,0,0,.06);
  box-shadow: var(--shadow-soft);
  color: #7a3e00;
  border-radius: 999px;
  font-size: 12px;
  padding: 3px 9px;
}
.flowGrid .marketCard{
  width: 100%;
}

/* ---------- Slots (player & AI) ---------- */
.slots{
  display: grid;
  grid-template-columns: repeat(3, minmax(180px,1fr));
  gap: 18px;
  align-items: start;
  padding: 10px 12px 18px;
}
.slotCell{
  height: calc((min(22vw, 220px)) * 88 / 63);
  min-height: 180px;
  border-radius: 16px;
  background: var(--slot-bg);
  border: 1px dashed rgba(0,0,0,.12);
  display: grid;
  place-items: center;
  position: relative;
  transition: box-shadow .2s ease, background .2s ease, border-color .2s ease;
  overflow: hidden;
}
.slotCell.ai{
  background: var(--slot-bg-ai);
}
.slotCell.glyph{
  border-style: solid;
  border-color: rgba(0,0,0,.10);
  background: linear-gradient(180deg,#f3f0e9,#ebe6dc);
}

/* highlight from drag/typed targeting */
.slotCell.highlight{
  box-shadow: var(--ring);
  background: #fffdf8;
  border-color: rgba(216,123,40,.35);
}

/* when a card sits in a slot, we size it to fill nicely */
.slotCell > .slotCard{
  width: 92%;
}

/* empty message */
.emptyCell{
  color: rgba(0,0,0,.35);
  font-size: 13px;
}

/* ---------- Glyph face-down (tray render) ---------- */
.glyphCard.faceDown{
  background: linear-gradient(180deg,#e7e3db,#d7d0c4);
  box-shadow: var(--shadow-soft) inset;
}
.glyphCard.faceDown .cHead,
.glyphCard.faceDown .cType,
.glyphCard.faceDown .cBody,
.glyphCard.faceDown .cStats{
  opacity: .0;
}

/* ---------- Chips (deck/discard) ---------- */
.deckBar{
  position: sticky; bottom: 0; inset-inline: 0;
  display: flex; gap: 10px;
  padding: 10px 12px;
}
.chipCirc{
  width: 44px; height: 44px;
  border-radius: 999px;
  display: grid; place-items: center;
  border: 1px solid rgba(0,0,0,.08);
  background: #fff;
  box-shadow: var(--shadow-soft);
  position: relative;
}
.chipCirc small{
  position: absolute; bottom: -8px;
  background:#fff;
  border:1px solid rgba(0,0,0,.06);
  border-radius: 999px;
  padding: 1px 6px;
  font-size: 11px;
  box-shadow: var(--shadow-soft);
}

/* ---------- Subtle animations ---------- */
@keyframes card-pop {
  from { transform: scale(.98); filter: brightness(.98); }
  to   { transform: scale(1);   filter: brightness(1); }
}
.card{ animation: card-pop .18s ease both; }

/* ---------- Aether “pulse” helper (used by gem) ---------- */
@keyframes aether-pulse {
  0%   { box-shadow: 0 0 0 0 rgba(216,123,40,.38); }
  70%  { box-shadow: 0 0 0 14px rgba(216,123,40,0); }
  100% { box-shadow: 0 0 0 0 rgba(216,123,40,0); }
}
.aetherPulse{
  animation: aether-pulse 1.25s ease-out 1;
}

/* ---------- Drag “ghost” appearance ---------- */
.dragGhost{
  filter: drop-shadow(0 12px 18px rgba(0,0,0,.22));
  transform: rotate(1deg);
}

/* ---------- Utility for typed target highlights ---------- */
.canDropSpell .slotCell:not(.glyph){ outline: 2px dashed rgba(44,120,255,.35); outline-offset: 2px; }
.canDropGlyph .slotCell.glyph{ outline: 2px dashed rgba(44,120,255,.35); outline-offset: 2px; }
