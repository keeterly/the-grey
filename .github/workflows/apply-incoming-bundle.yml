name: Apply incoming bundle and open PR

on:
  push:
    branches: ['**']            # any branch
    paths: ['incoming/**']      # any file inside incoming/
  workflow_dispatch: {}         # allow manual runs

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect incoming payloads in this commit
        id: detect
        run: |
          set -euo pipefail
          # List files from this push that live under incoming/
          ADDED=$(git diff-tree --no-commit-id --name-only -r "$GITHUB_SHA" | grep '^incoming/' || true)
          echo "added<<EOF" >> $GITHUB_OUTPUT
          echo "$ADDED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "Detected:"
          echo "$ADDED"

      - name: Stop if nothing detected
        if: steps.detect.outputs.added == ''
        run: |
          echo "No files under incoming/ in this commit."
          exit 1

      - name: Prepare workspace
        run: |
          mkdir -p _work/apply
          echo "${{ steps.detect.outputs.added }}" | sed '/^\s*$/d' > _work/incoming_list.txt
          cat _work/incoming_list.txt

      - name: Apply payloads
        run: |
          set -euo pipefail
          CHANGES=0
          while read -r FILE; do
            echo "Processing: $FILE"

            # Create a working branch per file
            SAFE_NAME="$(basename "$FILE" | sed 's/[^a-zA-Z0-9._-]/-/g')"
            BRANCH="bot/apply-${SAFE_NAME%-*}-$(date +%Y%m%d-%H%M%S)"
            git checkout -b "$BRANCH"

            if [[ "$FILE" == *.zip || "$FILE" == *.ZIP ]]; then
              unzip -o "$FILE" -d _work/apply
              # If our helper exists, run it; otherwise copy contents (excluding incoming/)
              if [[ -x "_work/apply/the-grey-fixes/apply_the_grey_fixes.sh" ]]; then
                (bash "_work/apply/the-grey-fixes/apply_the_grey_fixes.sh" || true)
              else
                rsync -a --exclude 'incoming/' _work/apply/ ./
              fi
            elif [[ "$FILE" == *.patch || "$FILE" == *.PATCH ]]; then
              git apply --index "$FILE"
            else
              echo "Skipping non-zip/patch: $FILE"
            fi

            # Donâ€™t commit the payload itself
            git reset incoming || true

            if ! git diff --cached --quiet; then
              git config user.name "github-actions[bot]"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git commit -m "bot: apply $FILE"
              echo "$BRANCH" >> _work/branches.txt
              CHANGES=1
            else
              echo "No staged changes for $FILE"
              git checkout -
              git branch -D "$BRANCH" || true
            fi

            rm -rf _work/apply/*
          done < _work/incoming_list.txt

          if [[ "$CHANGES" -eq 0 ]]; then
            echo "No changes to commit."
            exit 0
          fi

      - name: Create PR(s)
        if: success()
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ${{ github.ref_name }}-autobot
          delete-branch: false
          title: "bot: apply incoming payload(s)"
          body: |
            This PR was opened automatically after applying payload(s) from `incoming/`.
            Review commit history for details.
          commit-message: "bot: apply incoming payload(s)"
