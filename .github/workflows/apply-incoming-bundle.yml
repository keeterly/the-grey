on:
  push:
    branches: ['**']       # run on any branch
    paths: ['incoming/**'] # any file in incoming/
  workflow_dispatch:       # keep manual trigger too




name: Apply incoming bundle and open PR

on:
  push:
    branches: ['**']           # run on any branch (including 2.0)
    paths: ['incoming/**']     # any file under incoming/
  workflow_dispatch:           # manual runs supported
    inputs:
      file:
        description: 'Optional: specific file under incoming/, e.g. incoming/the-grey-fixes.zip'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show context (debug)
        run: |
          echo "Ref: $GITHUB_REF"
          echo "SHA: $GITHUB_SHA"
          echo "Actor: $GITHUB_ACTOR"
          echo "Inputs.file: '${{ inputs.file }}'"
          echo "Branch name: ${GITHUB_REF##*/}"
          echo "Repo files under incoming/:"
          ls -l incoming || true

      - name: Determine payload file
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          CANDIDATE="${{ inputs.file }}"
          if [[ -z "$CANDIDATE" ]]; then
            # If manual run without input, pick the newest zip/patch under incoming/
            CANDIDATE=$(ls -t incoming/*.{zip,ZIP,patch,PATCH} 2>/dev/null | head -n1 || true)
          fi
          echo "Candidate payload: $CANDIDATE"
          if [[ -z "${CANDIDATE:-}" ]]; then
            echo "No .zip or .patch found under incoming/. Provide inputs.file or push a file to incoming/."
            echo "file=" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "file=$CANDIDATE" >> $GITHUB_OUTPUT

      - name: Stop if no candidate found
        if: steps.pick.outputs.file == ''
        run: |
          echo "Nothing to apply."
          exit 0

      - name: Apply payload
        id: apply
        shell: bash
        run: |
          set -euo pipefail
          FILE="${{ steps.pick.outputs.file }}"
          echo "Applying: $FILE"
          mkdir -p _work/apply

          if [[ "$FILE" =~ \.zip$|\.ZIP$ ]]; then
            unzip -o "$FILE" -d _work/apply
            echo "Unzipped structure:"
            find _work/apply -maxdepth 2 -type f -print

            # If a helper script exists in the bundle, run it from repo root
            if [[ -x "_work/apply/the-grey-fixes/apply_the_grey_fixes.sh" ]]; then
              echo "Found helper script; running it…"
              bash "_work/apply/the-grey-fixes/apply_the_grey_fixes.sh" || true
            else
              echo "No helper script; copying bundle contents (excluding incoming/)."
              rsync -a --exclude 'incoming/' _work/apply/ ./
            fi

          elif [[ "$FILE" =~ \.patch$|\.PATCH$ ]]; then
            echo "Applying patch…"
            git apply --index "$FILE"
          else
            echo "Unsupported file type: $FILE"
            exit 1
          fi

          # Don’t commit the payload file itself
          git reset incoming || true

          # Stage any changes, if present
          git add -A || true

          if git diff --cached --quiet; then
            echo "No staged changes after applying payload."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes staged."
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.apply.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "bot/apply-incoming-${{ github.run_id }}"
          delete-branch: true
          title: "bot: apply incoming payload"
          body: |
            This PR was opened automatically after applying `${{ steps.pick.outputs.file }}`.
            Review commits for details. The job ran on `${{ github.ref_name }}`.
          commit-message: "bot: apply ${{ steps.pick.outputs.file }}"
          committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

      - name: No changes (info)
        if: steps.apply.outputs.changed != 'true'
        run: echo "No changes detected; nothing to PR."
